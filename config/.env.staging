# Staging Environment Configuration
# This file contains settings for staging environment that mimics production

# Environment
ENVIRONMENT=staging

# Trading API Keys (Use testnet/sandbox keys in staging)
BINANCE_API_KEY=${STAGING_BINANCE_API_KEY}
BINANCE_API_SECRET=${STAGING_BINANCE_API_SECRET}
BINANCE_TESTNET=true

ALPACA_API_KEY=${STAGING_ALPACA_API_KEY}
ALPACA_API_SECRET=${STAGING_ALPACA_API_SECRET}
ALPACA_BASE_URL=https://paper-api.alpaca.markets

# Database Configuration (PostgreSQL for staging)
DATABASE_TYPE=postgresql
POSTGRES_HOST=${STAGING_POSTGRES_HOST}
POSTGRES_PORT=5432
POSTGRES_DB=trading_swarm_staging
POSTGRES_USER=${STAGING_POSTGRES_USER}
POSTGRES_PASSWORD=${STAGING_POSTGRES_PASSWORD}
DATABASE_POOL_SIZE=10
DATABASE_MAX_OVERFLOW=20

# Redis Configuration
REDIS_HOST=${STAGING_REDIS_HOST}
REDIS_PORT=6379
REDIS_DB=1
REDIS_PASSWORD=${STAGING_REDIS_PASSWORD}

# MongoDB Configuration (Optional)
MONGODB_HOST=${STAGING_MONGODB_HOST}
MONGODB_PORT=27017
MONGODB_DATABASE=trading_swarm_staging
MONGODB_USERNAME=${STAGING_MONGODB_USER}
MONGODB_PASSWORD=${STAGING_MONGODB_PASSWORD}

# Email Configuration
EMAIL_ENABLED=true
EMAIL_USERNAME=${STAGING_EMAIL_USERNAME}
EMAIL_PASSWORD=${STAGING_EMAIL_PASSWORD}
SMTP_SERVER=smtp.gmail.com
SMTP_PORT=587

# Security
JWT_SECRET=${STAGING_JWT_SECRET}
ENCRYPTION_KEY=${STAGING_ENCRYPTION_KEY}

# External Services
TELEGRAM_BOT_TOKEN=${STAGING_TELEGRAM_BOT_TOKEN}
DISCORD_WEBHOOK_URL=${STAGING_DISCORD_WEBHOOK_URL}

# Staging Settings
DEBUG=false
LOG_LEVEL=INFO
TESTING_MODE=false

# Trading Configuration
MAX_POSITION_SIZE=0.05
CAPITAL=10000.00
ENABLE_REAL_TRADING=false

# Monitoring and Logging
PROMETHEUS_ENABLED=true
PROMETHEUS_PORT=8000
GRAFANA_ENABLED=true
SENTRY_DSN=${STAGING_SENTRY_DSN}
SENTRY_ENVIRONMENT=staging
SENTRY_TRACES_SAMPLE_RATE=0.1

# Web Server Configuration (Gunicorn)
GUNICORN_WORKERS=4
GUNICORN_THREADS=2
GUNICORN_BIND=0.0.0.0:8080
GUNICORN_TIMEOUT=120
GUNICORN_KEEPALIVE=5

# Raspberry Pi Settings
RPI_NODE_ID=staging_node_001
RPI_LOCATION=staging_server
